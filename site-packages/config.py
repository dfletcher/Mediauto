#/usr/bin/env python

import os
from optparse import OptionParser
from xml.dom.minidom import parse

STANDARD_CONFIG_FILE_LOCATIONS = [
  '/etc/mediauto.conf',
  os.path.join(os.getenv('HOME'), '.mediauto/mediauto.conf'),
]
parser = OptionParser()
parser.add_option(
  "-c",
  "--config",
  metavar="FILE",
  dest="configfile",
  help="path to the configuration file"
)
parser.add_option(
  "-d",
  "--dvd-destination",
  metavar="DIR",
  dest="dvd_destination",
  help="DVD output directory"
)

class ConfigurationException(Exception):
  def __init__(self, message): Exception.__init__(self, message)

def boolean_attribute(element, name):
  S = element.getAttribute(name)
  s = S.lower()
  if s == 'true': return True
  if s == 'yes': return True
  if s == 'false': return False
  if s == 'no': return False
  raise ConfigurationException(
    'Invalid boolean configuration value "%s" in attribute "%s".' % (name, S)
  )

class Config:

  def __init__(self):
    self.programs = {}
    self.insertrules = {}
    self.variables = {}
    configfiles = [ x for x in STANDARD_CONFIG_FILE_LOCATIONS if os.path.isfile(x) ]
    options, args = parser.parse_args()
    if options.configfile and os.path.isfile(options.configfile):
      configfiles.append(options.configfile)
    #print(str(configfiles))
    for x in configfiles:
      doc = parse(x)
      programs = doc.getElementsByTagName('program')
      for program in programs:
        self.set_program(
          program.getAttribute('name'),
          boolean_attribute(program, 'enabled'),
          program.getAttribute('path')
        )
      #print(str(doc))
      insertrules = doc.getElementsByTagName('insert')
      for insertrule in insertrules:
        self.set_insert_rule(
          insertrule.getAttribute('media'), 
          [ x.getAttribute('name') for x in insertrule.getElementsByTagName('process') ]
        )
      variables = doc.getElementsByTagName('variable')
      for variable in variables:
        self.set_variable(
          variable.getAttribute('name'), 
          variable.getAttribute('value')
        )
    if options.dvd_destination:
      self.variables['dvd.destination'] = options.dvd_destination

  def set_variable(self, name, value):
    self.variables[name] = value

  def set_insert_rule(self, mediatype, processes):
    self.insertrules[mediatype] = (mediatype, processes)

  def set_program(self, name, enabled, path):
    self.programs[name] = (name, enabled, path)

  def variable(self, name):
    if not name in self.variables: return None
    return self.variables[name]

  def insert_rule(self, mediatype):
    if not mediatype in self.insertrules: return []
    return self.insertrules[mediatype][1]

  def program_enabled(self, name):
    if not name in self.programs: return False
    return self.programs[name][1]

  def program_path(self, name):
    if not name in self.programs: return None
    return self.programs[name][2]

config = Config()

def variable(name):
  return config.variable(name)

def insert_rule(mediatype):
  return config.insert_rule(mediatype)

def program_enabled(name):
  return config.program_enabled(name)

def program_path(name):
  return config.program_path(name)

